package main

import (
	"fmt"
	"time"
)

func main() {
	/*
		// Current local time
		fmt.Println(time.Now())

		// Specific time
		specificTime := time.Date(2025, time.August, 28, 12, 0, 0, 0, time.UTC)
		fmt.Println(specificTime)

		// Parse time
		parsedTime, _ := time.Parse("2006-01-02", "2020-05-01") // Mon Jan 2 15:04:05 MST 2006
		fmt.Println(parsedTime)

		// Format time
		t := time.Now()
		fmt.Println("Formatted time:", t.Format("Monday 06-01-02 04-15"))

		oneDayLater := t.Add(time.Hour * 24)
		fmt.Println(oneDayLater)
		fmt.Println(oneDayLater.Weekday())

		fmt.Println("Rounded time:", t.Round(time.Hour))

		loc, _ := time.LoadLocation("Asia/Kolkata")
		t = time.Date(2025, time.August, 28, 16, 13, 50, 00, time.UTC)

		// Convert this to specific time zone
		tLocal := t.In(loc)

		// perform rounding
		roundedTime := t.Round(time.Hour)
		roundedTimeLocal := roundedTime.In(loc)

		fmt.Println("Original Time UTC:", t)
		fmt.Println("Original Time Local:", tLocal)
		fmt.Println("Rounded Time UTC:", roundedTime)
		fmt.Println("Original Time local:", roundedTimeLocal)
	*/

	fmt.Println("Truncated time:", time.Now().Truncate(time.Hour)) // always round down
	loc, _ := time.LoadLocation("America/New_York")

	// convert time to location
	tInNY := time.Now().In(loc)
	fmt.Println("New York Time:", tInNY)

	t1 := time.Date(2025, time.August, 28, 16, 23, 30, 0, time.UTC)
	t2 := time.Date(2025, time.October, 30, 0, 0, 0, 0, time.UTC)

	duration := t2.Sub(t1)
	fmt.Println("Duration:", duration)

	// Compare times
	fmt.Println("t2 is after t1?", t2.After(t1))
}
